//------------------------------------------------------------------------------
// <auto-generated>
//    This code was generated from a template.
//
//    Manual changes to this file may cause unexpected behavior in your application.
//    Manual changes to this file will be overwritten if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

using System;
using System.ComponentModel;
using System.Data.EntityClient;
using System.Data.Objects;
using System.Data.Objects.DataClasses;
using System.Linq;
using System.Runtime.Serialization;
using System.Xml.Serialization;

[assembly: EdmSchemaAttribute()]
#region EDM Relationship Metadata

[assembly: EdmRelationshipAttribute("Model1", "VeículoHistórico", "Veículo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Veículo), "Histórico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Histórico))]
[assembly: EdmRelationshipAttribute("Model1", "ReservaVeículo", "Reserva", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Reserva), "Veículo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Veículo))]
[assembly: EdmRelationshipAttribute("Model1", "HistóricoRelatório", "Histórico", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Histórico), "Relatório", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Relatório))]
[assembly: EdmRelationshipAttribute("Model1", "VeículoModelo", "Veículo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Veículo), "Modelo", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Modelo))]
[assembly: EdmRelationshipAttribute("Model1", "FuncionárioRelatório", "Funcionário", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Funcionário), "Relatório", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Relatório))]
[assembly: EdmRelationshipAttribute("Model1", "FuncionárioVeículo", "Funcionário", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Funcionário), "Veículo", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Veículo))]
[assembly: EdmRelationshipAttribute("Model1", "HistóricoManutenção", "Histórico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Histórico), "Manutenção", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Manutenção))]
[assembly: EdmRelationshipAttribute("Model1", "FuncionárioManutenção", "Funcionário", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Funcionário), "Manutenção", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Manutenção))]
[assembly: EdmRelationshipAttribute("Model1", "FuncionárioReserva", "Funcionário", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Funcionário), "Reserva", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Reserva))]
[assembly: EdmRelationshipAttribute("Model1", "HistóricoLocação", "Histórico", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Histórico), "Locação", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Locação))]
[assembly: EdmRelationshipAttribute("Model1", "FuncionárioLocação", "Funcionário", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Funcionário), "Locação", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Locação))]
[assembly: EdmRelationshipAttribute("Model1", "ClienteLocação", "Cliente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Cliente), "Locação", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Locação))]
[assembly: EdmRelationshipAttribute("Model1", "ClienteReserva", "Cliente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Cliente), "Reserva", System.Data.Metadata.Edm.RelationshipMultiplicity.Many, typeof(PBR_Rent_a_car.Reserva))]
[assembly: EdmRelationshipAttribute("Model1", "ClienteEndereço", "Cliente", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Cliente), "Endereço", System.Data.Metadata.Edm.RelationshipMultiplicity.One, typeof(PBR_Rent_a_car.Endereço))]

#endregion

namespace PBR_Rent_a_car
{
    #region Contexts
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    public partial class Model1Container : ObjectContext
    {
        #region Constructors
    
        /// <summary>
        /// Initializes a new Model1Container object using the connection string found in the 'Model1Container' section of the application configuration file.
        /// </summary>
        public Model1Container() : base("name=Model1Container", "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(string connectionString) : base(connectionString, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        /// <summary>
        /// Initialize a new Model1Container object.
        /// </summary>
        public Model1Container(EntityConnection connection) : base(connection, "Model1Container")
        {
            this.ContextOptions.LazyLoadingEnabled = true;
            OnContextCreated();
        }
    
        #endregion
    
        #region Partial Methods
    
        partial void OnContextCreated();
    
        #endregion
    
        #region ObjectSet Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Veículo> VeículoSet
        {
            get
            {
                if ((_VeículoSet == null))
                {
                    _VeículoSet = base.CreateObjectSet<Veículo>("VeículoSet");
                }
                return _VeículoSet;
            }
        }
        private ObjectSet<Veículo> _VeículoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Histórico> HistóricoSet
        {
            get
            {
                if ((_HistóricoSet == null))
                {
                    _HistóricoSet = base.CreateObjectSet<Histórico>("HistóricoSet");
                }
                return _HistóricoSet;
            }
        }
        private ObjectSet<Histórico> _HistóricoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Relatório> RelatórioSet
        {
            get
            {
                if ((_RelatórioSet == null))
                {
                    _RelatórioSet = base.CreateObjectSet<Relatório>("RelatórioSet");
                }
                return _RelatórioSet;
            }
        }
        private ObjectSet<Relatório> _RelatórioSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Modelo> ModeloSet
        {
            get
            {
                if ((_ModeloSet == null))
                {
                    _ModeloSet = base.CreateObjectSet<Modelo>("ModeloSet");
                }
                return _ModeloSet;
            }
        }
        private ObjectSet<Modelo> _ModeloSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Funcionário> FuncionárioSet
        {
            get
            {
                if ((_FuncionárioSet == null))
                {
                    _FuncionárioSet = base.CreateObjectSet<Funcionário>("FuncionárioSet");
                }
                return _FuncionárioSet;
            }
        }
        private ObjectSet<Funcionário> _FuncionárioSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Locação> LocaçãoSet
        {
            get
            {
                if ((_LocaçãoSet == null))
                {
                    _LocaçãoSet = base.CreateObjectSet<Locação>("LocaçãoSet");
                }
                return _LocaçãoSet;
            }
        }
        private ObjectSet<Locação> _LocaçãoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Reserva> ReservaSet
        {
            get
            {
                if ((_ReservaSet == null))
                {
                    _ReservaSet = base.CreateObjectSet<Reserva>("ReservaSet");
                }
                return _ReservaSet;
            }
        }
        private ObjectSet<Reserva> _ReservaSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Manutenção> ManutençãoSet
        {
            get
            {
                if ((_ManutençãoSet == null))
                {
                    _ManutençãoSet = base.CreateObjectSet<Manutenção>("ManutençãoSet");
                }
                return _ManutençãoSet;
            }
        }
        private ObjectSet<Manutenção> _ManutençãoSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Cliente> ClienteSet
        {
            get
            {
                if ((_ClienteSet == null))
                {
                    _ClienteSet = base.CreateObjectSet<Cliente>("ClienteSet");
                }
                return _ClienteSet;
            }
        }
        private ObjectSet<Cliente> _ClienteSet;
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        public ObjectSet<Endereço> EndereçoSet
        {
            get
            {
                if ((_EndereçoSet == null))
                {
                    _EndereçoSet = base.CreateObjectSet<Endereço>("EndereçoSet");
                }
                return _EndereçoSet;
            }
        }
        private ObjectSet<Endereço> _EndereçoSet;

        #endregion

        #region AddTo Methods
    
        /// <summary>
        /// Deprecated Method for adding a new object to the VeículoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToVeículoSet(Veículo veículo)
        {
            base.AddObject("VeículoSet", veículo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the HistóricoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToHistóricoSet(Histórico histórico)
        {
            base.AddObject("HistóricoSet", histórico);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the RelatórioSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToRelatórioSet(Relatório relatório)
        {
            base.AddObject("RelatórioSet", relatório);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ModeloSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToModeloSet(Modelo modelo)
        {
            base.AddObject("ModeloSet", modelo);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the FuncionárioSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToFuncionárioSet(Funcionário funcionário)
        {
            base.AddObject("FuncionárioSet", funcionário);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the LocaçãoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToLocaçãoSet(Locação locação)
        {
            base.AddObject("LocaçãoSet", locação);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ReservaSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToReservaSet(Reserva reserva)
        {
            base.AddObject("ReservaSet", reserva);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ManutençãoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToManutençãoSet(Manutenção manutenção)
        {
            base.AddObject("ManutençãoSet", manutenção);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the ClienteSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToClienteSet(Cliente cliente)
        {
            base.AddObject("ClienteSet", cliente);
        }
    
        /// <summary>
        /// Deprecated Method for adding a new object to the EndereçoSet EntitySet. Consider using the .Add method of the associated ObjectSet&lt;T&gt; property instead.
        /// </summary>
        public void AddToEndereçoSet(Endereço endereço)
        {
            base.AddObject("EndereçoSet", endereço);
        }

        #endregion

    }

    #endregion

    #region Entities
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Cliente")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Cliente : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Cliente object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="cPF">Initial value of the CPF property.</param>
        /// <param name="telefones">Initial value of the Telefones property.</param>
        /// <param name="notificação">Initial value of the Notificação property.</param>
        public static Cliente CreateCliente(global::System.Int32 id, global::System.String nome, global::System.String cPF, global::System.String telefones, global::System.String notificação)
        {
            Cliente cliente = new Cliente();
            cliente.Id = id;
            cliente.Nome = nome;
            cliente.CPF = cPF;
            cliente.Telefones = telefones;
            cliente.Notificação = notificação;
            return cliente;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CPF
        {
            get
            {
                return _CPF;
            }
            set
            {
                OnCPFChanging(value);
                ReportPropertyChanging("CPF");
                _CPF = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CPF");
                OnCPFChanged();
            }
        }
        private global::System.String _CPF;
        partial void OnCPFChanging(global::System.String value);
        partial void OnCPFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Telefones
        {
            get
            {
                return _Telefones;
            }
            set
            {
                OnTelefonesChanging(value);
                ReportPropertyChanging("Telefones");
                _Telefones = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Telefones");
                OnTelefonesChanged();
            }
        }
        private global::System.String _Telefones;
        partial void OnTelefonesChanging(global::System.String value);
        partial void OnTelefonesChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Notificação
        {
            get
            {
                return _Notificação;
            }
            set
            {
                OnNotificaçãoChanging(value);
                ReportPropertyChanging("Notificação");
                _Notificação = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Notificação");
                OnNotificaçãoChanged();
            }
        }
        private global::System.String _Notificação;
        partial void OnNotificaçãoChanging(global::System.String value);
        partial void OnNotificaçãoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ClienteLocação", "Locação")]
        public EntityCollection<Locação> Locação
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Locação>("Model1.ClienteLocação", "Locação");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Locação>("Model1.ClienteLocação", "Locação", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ClienteReserva", "Reserva")]
        public EntityCollection<Reserva> Reserva
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reserva>("Model1.ClienteReserva", "Reserva");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reserva>("Model1.ClienteReserva", "Reserva", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ClienteEndereço", "Endereço")]
        public Endereço Endereço
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereço>("Model1.ClienteEndereço", "Endereço").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereço>("Model1.ClienteEndereço", "Endereço").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Endereço> EndereçoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Endereço>("Model1.ClienteEndereço", "Endereço");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Endereço>("Model1.ClienteEndereço", "Endereço", value);
                }
            }
        }

        #endregion


        public Cliente()
        {
            // TODO: Complete member initialization
        }
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Endereço")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Endereço : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Endereço object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="uF">Initial value of the UF property.</param>
        /// <param name="cidade">Initial value of the Cidade property.</param>
        /// <param name="bairro">Initial value of the Bairro property.</param>
        /// <param name="rua">Initial value of the Rua property.</param>
        /// <param name="número">Initial value of the Número property.</param>
        /// <param name="cEP">Initial value of the CEP property.</param>
        public static Endereço CreateEndereço(global::System.Int32 id, global::System.String uF, global::System.String cidade, global::System.String bairro, global::System.String rua, global::System.Int32 número, global::System.Int32 cEP)
        {
            Endereço endereço = new Endereço();
            endereço.Id = id;
            endereço.UF = uF;
            endereço.Cidade = cidade;
            endereço.Bairro = bairro;
            endereço.Rua = rua;
            endereço.Número = número;
            endereço.CEP = cEP;
            return endereço;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String UF
        {
            get
            {
                return _UF;
            }
            set
            {
                OnUFChanging(value);
                ReportPropertyChanging("UF");
                _UF = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("UF");
                OnUFChanged();
            }
        }
        private global::System.String _UF;
        partial void OnUFChanging(global::System.String value);
        partial void OnUFChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cidade
        {
            get
            {
                return _Cidade;
            }
            set
            {
                OnCidadeChanging(value);
                ReportPropertyChanging("Cidade");
                _Cidade = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cidade");
                OnCidadeChanged();
            }
        }
        private global::System.String _Cidade;
        partial void OnCidadeChanging(global::System.String value);
        partial void OnCidadeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Bairro
        {
            get
            {
                return _Bairro;
            }
            set
            {
                OnBairroChanging(value);
                ReportPropertyChanging("Bairro");
                _Bairro = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Bairro");
                OnBairroChanged();
            }
        }
        private global::System.String _Bairro;
        partial void OnBairroChanging(global::System.String value);
        partial void OnBairroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Rua
        {
            get
            {
                return _Rua;
            }
            set
            {
                OnRuaChanging(value);
                ReportPropertyChanging("Rua");
                _Rua = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Rua");
                OnRuaChanged();
            }
        }
        private global::System.String _Rua;
        partial void OnRuaChanging(global::System.String value);
        partial void OnRuaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Número
        {
            get
            {
                return _Número;
            }
            set
            {
                OnNúmeroChanging(value);
                ReportPropertyChanging("Número");
                _Número = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Número");
                OnNúmeroChanged();
            }
        }
        private global::System.Int32 _Número;
        partial void OnNúmeroChanging(global::System.Int32 value);
        partial void OnNúmeroChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 CEP
        {
            get
            {
                return _CEP;
            }
            set
            {
                OnCEPChanging(value);
                ReportPropertyChanging("CEP");
                _CEP = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("CEP");
                OnCEPChanged();
            }
        }
        private global::System.Int32 _CEP;
        partial void OnCEPChanging(global::System.Int32 value);
        partial void OnCEPChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ClienteEndereço", "Cliente")]
        public Cliente Cliente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteEndereço", "Cliente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteEndereço", "Cliente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cliente> ClienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteEndereço", "Cliente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cliente>("Model1.ClienteEndereço", "Cliente", value);
                }
            }
        }

        #endregion


        public Endereço()
        {
            // TODO: Complete member initialization
        }
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Funcionário")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Funcionário : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Funcionário object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="carteiraDeTrabalho">Initial value of the CarteiraDeTrabalho property.</param>
        /// <param name="salário">Initial value of the Salário property.</param>
        /// <param name="função">Initial value of the Função property.</param>
        public static Funcionário CreateFuncionário(global::System.Int32 id, global::System.String nome, global::System.String carteiraDeTrabalho, global::System.Double salário, global::System.String função)
        {
            Funcionário funcionário = new Funcionário();
            funcionário.Id = id;
            funcionário.Nome = nome;
            funcionário.CarteiraDeTrabalho = carteiraDeTrabalho;
            funcionário.Salário = salário;
            funcionário.Função = função;
            return funcionário;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String CarteiraDeTrabalho
        {
            get
            {
                return _CarteiraDeTrabalho;
            }
            set
            {
                OnCarteiraDeTrabalhoChanging(value);
                ReportPropertyChanging("CarteiraDeTrabalho");
                _CarteiraDeTrabalho = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("CarteiraDeTrabalho");
                OnCarteiraDeTrabalhoChanged();
            }
        }
        private global::System.String _CarteiraDeTrabalho;
        partial void OnCarteiraDeTrabalhoChanging(global::System.String value);
        partial void OnCarteiraDeTrabalhoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Double Salário
        {
            get
            {
                return _Salário;
            }
            set
            {
                OnSalárioChanging(value);
                ReportPropertyChanging("Salário");
                _Salário = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Salário");
                OnSalárioChanged();
            }
        }
        private global::System.Double _Salário;
        partial void OnSalárioChanging(global::System.Double value);
        partial void OnSalárioChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Função
        {
            get
            {
                return _Função;
            }
            set
            {
                OnFunçãoChanging(value);
                ReportPropertyChanging("Função");
                _Função = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Função");
                OnFunçãoChanged();
            }
        }
        private global::System.String _Função;
        partial void OnFunçãoChanging(global::System.String value);
        partial void OnFunçãoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioRelatório", "Relatório")]
        public EntityCollection<Relatório> Relatório
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Relatório>("Model1.FuncionárioRelatório", "Relatório");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Relatório>("Model1.FuncionárioRelatório", "Relatório", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioVeículo", "Veículo")]
        public EntityCollection<Veículo> Veículo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Veículo>("Model1.FuncionárioVeículo", "Veículo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Veículo>("Model1.FuncionárioVeículo", "Veículo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioManutenção", "Manutenção")]
        public EntityCollection<Manutenção> Manutenção
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Manutenção>("Model1.FuncionárioManutenção", "Manutenção");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Manutenção>("Model1.FuncionárioManutenção", "Manutenção", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioReserva", "Reserva")]
        public EntityCollection<Reserva> Reserva
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reserva>("Model1.FuncionárioReserva", "Reserva");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reserva>("Model1.FuncionárioReserva", "Reserva", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioLocação", "Locação")]
        public EntityCollection<Locação> Locação
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Locação>("Model1.FuncionárioLocação", "Locação");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Locação>("Model1.FuncionárioLocação", "Locação", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Histórico")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Histórico : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Histórico object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Histórico CreateHistórico(global::System.Int32 id)
        {
            Histórico histórico = new Histórico();
            histórico.Id = id;
            return histórico;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VeículoHistórico", "Veículo")]
        public Veículo Veículo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Veículo>("Model1.VeículoHistórico", "Veículo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Veículo>("Model1.VeículoHistórico", "Veículo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Veículo> VeículoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Veículo>("Model1.VeículoHistórico", "Veículo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Veículo>("Model1.VeículoHistórico", "Veículo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "HistóricoRelatório", "Relatório")]
        public Relatório Relatório
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relatório>("Model1.HistóricoRelatório", "Relatório").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relatório>("Model1.HistóricoRelatório", "Relatório").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Relatório> RelatórioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Relatório>("Model1.HistóricoRelatório", "Relatório");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Relatório>("Model1.HistóricoRelatório", "Relatório", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "HistóricoManutenção", "Manutenção")]
        public EntityCollection<Manutenção> Manutenção
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Manutenção>("Model1.HistóricoManutenção", "Manutenção");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Manutenção>("Model1.HistóricoManutenção", "Manutenção", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "HistóricoLocação", "Locação")]
        public EntityCollection<Locação> Locação
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Locação>("Model1.HistóricoLocação", "Locação");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Locação>("Model1.HistóricoLocação", "Locação", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Locação")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Locação : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Locação object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="inicio">Initial value of the Inicio property.</param>
        /// <param name="fim">Initial value of the Fim property.</param>
        public static Locação CreateLocação(global::System.Int32 id, global::System.String inicio, global::System.String fim)
        {
            Locação locação = new Locação();
            locação.Id = id;
            locação.Inicio = inicio;
            locação.Fim = fim;
            return locação;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Inicio é uma data. Fazer conversão na classe
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Inicio
        {
            get
            {
                return _Inicio;
            }
            set
            {
                OnInicioChanging(value);
                ReportPropertyChanging("Inicio");
                _Inicio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Inicio");
                OnInicioChanged();
            }
        }
        private global::System.String _Inicio;
        partial void OnInicioChanging(global::System.String value);
        partial void OnInicioChanged();
    
        /// <summary>
        /// Fim é uma data. Fazer conversão na classe
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fim
        {
            get
            {
                return _Fim;
            }
            set
            {
                OnFimChanging(value);
                ReportPropertyChanging("Fim");
                _Fim = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fim");
                OnFimChanged();
            }
        }
        private global::System.String _Fim;
        partial void OnFimChanging(global::System.String value);
        partial void OnFimChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "HistóricoLocação", "Histórico")]
        public Histórico Histórico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.HistóricoLocação", "Histórico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.HistóricoLocação", "Histórico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Histórico> HistóricoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.HistóricoLocação", "Histórico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Histórico>("Model1.HistóricoLocação", "Histórico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioLocação", "Funcionário")]
        public Funcionário Funcionário
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioLocação", "Funcionário").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioLocação", "Funcionário").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Funcionário> FuncionárioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioLocação", "Funcionário");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Funcionário>("Model1.FuncionárioLocação", "Funcionário", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ClienteLocação", "Cliente")]
        public Cliente Cliente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteLocação", "Cliente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteLocação", "Cliente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cliente> ClienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteLocação", "Cliente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cliente>("Model1.ClienteLocação", "Cliente", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Manutenção")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Manutenção : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Manutenção object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="inicio">Initial value of the Inicio property.</param>
        /// <param name="fim">Initial value of the Fim property.</param>
        /// <param name="motivo">Initial value of the Motivo property.</param>
        public static Manutenção CreateManutenção(global::System.Int32 id, global::System.String inicio, global::System.String fim, global::System.String motivo)
        {
            Manutenção manutenção = new Manutenção();
            manutenção.Id = id;
            manutenção.Inicio = inicio;
            manutenção.Fim = fim;
            manutenção.Motivo = motivo;
            return manutenção;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Inicio é uma data. Usar conversão na classe
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Inicio
        {
            get
            {
                return _Inicio;
            }
            set
            {
                OnInicioChanging(value);
                ReportPropertyChanging("Inicio");
                _Inicio = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Inicio");
                OnInicioChanged();
            }
        }
        private global::System.String _Inicio;
        partial void OnInicioChanging(global::System.String value);
        partial void OnInicioChanged();
    
        /// <summary>
        /// Fim é uma Data. Usar conversão na classe
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fim
        {
            get
            {
                return _Fim;
            }
            set
            {
                OnFimChanging(value);
                ReportPropertyChanging("Fim");
                _Fim = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fim");
                OnFimChanged();
            }
        }
        private global::System.String _Fim;
        partial void OnFimChanging(global::System.String value);
        partial void OnFimChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Motivo
        {
            get
            {
                return _Motivo;
            }
            set
            {
                OnMotivoChanging(value);
                ReportPropertyChanging("Motivo");
                _Motivo = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Motivo");
                OnMotivoChanged();
            }
        }
        private global::System.String _Motivo;
        partial void OnMotivoChanging(global::System.String value);
        partial void OnMotivoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "HistóricoManutenção", "Histórico")]
        public Histórico Histórico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.HistóricoManutenção", "Histórico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.HistóricoManutenção", "Histórico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Histórico> HistóricoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.HistóricoManutenção", "Histórico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Histórico>("Model1.HistóricoManutenção", "Histórico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioManutenção", "Funcionário")]
        public Funcionário Funcionário
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioManutenção", "Funcionário").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioManutenção", "Funcionário").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Funcionário> FuncionárioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioManutenção", "Funcionário");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Funcionário>("Model1.FuncionárioManutenção", "Funcionário", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Modelo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Modelo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Modelo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="nome">Initial value of the Nome property.</param>
        /// <param name="fornecedor">Initial value of the Fornecedor property.</param>
        public static Modelo CreateModelo(global::System.Int32 id, global::System.String nome, global::System.String fornecedor)
        {
            Modelo modelo = new Modelo();
            modelo.Id = id;
            modelo.Nome = nome;
            modelo.Fornecedor = fornecedor;
            return modelo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Nome
        {
            get
            {
                return _Nome;
            }
            set
            {
                OnNomeChanging(value);
                ReportPropertyChanging("Nome");
                _Nome = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Nome");
                OnNomeChanged();
            }
        }
        private global::System.String _Nome;
        partial void OnNomeChanging(global::System.String value);
        partial void OnNomeChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Fornecedor
        {
            get
            {
                return _Fornecedor;
            }
            set
            {
                OnFornecedorChanging(value);
                ReportPropertyChanging("Fornecedor");
                _Fornecedor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Fornecedor");
                OnFornecedorChanged();
            }
        }
        private global::System.String _Fornecedor;
        partial void OnFornecedorChanging(global::System.String value);
        partial void OnFornecedorChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VeículoModelo", "Veículo")]
        public EntityCollection<Veículo> Veículo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Veículo>("Model1.VeículoModelo", "Veículo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Veículo>("Model1.VeículoModelo", "Veículo", value);
                }
            }
        }

        #endregion


        public Modelo()
        {
            // TODO: Complete member initialization
        }
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Relatório")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Relatório : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Relatório object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        public static Relatório CreateRelatório(global::System.Int32 id)
        {
            Relatório relatório = new Relatório();
            relatório.Id = id;
            return relatório;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "HistóricoRelatório", "Histórico")]
        public EntityCollection<Histórico> Histórico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Histórico>("Model1.HistóricoRelatório", "Histórico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Histórico>("Model1.HistóricoRelatório", "Histórico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioRelatório", "Funcionário")]
        public Funcionário Funcionário
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioRelatório", "Funcionário").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioRelatório", "Funcionário").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Funcionário> FuncionárioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioRelatório", "Funcionário");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Funcionário>("Model1.FuncionárioRelatório", "Funcionário", value);
                }
            }
        }

        #endregion

    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Reserva")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Reserva : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Reserva object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="data">Initial value of the Data property.</param>
        public static Reserva CreateReserva(global::System.Int32 id, global::System.String data)
        {
            Reserva reserva = new Reserva();
            reserva.Id = id;
            reserva.Data = data;
            return reserva;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// Representação de Data como string. Fazer conversão na classe para algo mais alto nível (DateTime, por exemplo)
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Data
        {
            get
            {
                return _Data;
            }
            set
            {
                OnDataChanging(value);
                ReportPropertyChanging("Data");
                _Data = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Data");
                OnDataChanged();
            }
        }
        private global::System.String _Data;
        partial void OnDataChanging(global::System.String value);
        partial void OnDataChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ReservaVeículo", "Veículo")]
        public Veículo Veículo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Veículo>("Model1.ReservaVeículo", "Veículo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Veículo>("Model1.ReservaVeículo", "Veículo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Veículo> VeículoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Veículo>("Model1.ReservaVeículo", "Veículo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Veículo>("Model1.ReservaVeículo", "Veículo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioReserva", "Funcionário")]
        public Funcionário Funcionário
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioReserva", "Funcionário").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioReserva", "Funcionário").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Funcionário> FuncionárioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioReserva", "Funcionário");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Funcionário>("Model1.FuncionárioReserva", "Funcionário", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ClienteReserva", "Cliente")]
        public Cliente Cliente
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteReserva", "Cliente").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteReserva", "Cliente").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Cliente> ClienteReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Cliente>("Model1.ClienteReserva", "Cliente");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Cliente>("Model1.ClienteReserva", "Cliente", value);
                }
            }
        }

        #endregion


        public Reserva()
        {
            // TODO: Complete member initialization
        }
    }
    
    /// <summary>
    /// No Metadata Documentation available.
    /// </summary>
    [EdmEntityTypeAttribute(NamespaceName="Model1", Name="Veículo")]
    [Serializable()]
    [DataContractAttribute(IsReference=true)]
    public partial class Veículo : EntityObject
    {
        #region Factory Method
    
        /// <summary>
        /// Create a new Veículo object.
        /// </summary>
        /// <param name="id">Initial value of the Id property.</param>
        /// <param name="cor">Initial value of the Cor property.</param>
        /// <param name="ano">Initial value of the Ano property.</param>
        /// <param name="categoria">Initial value of the Categoria property.</param>
        /// <param name="quilometragem">Initial value of the Quilometragem property.</param>
        /// <param name="estado">Initial value of the Estado property.</param>
        public static Veículo CreateVeículo(global::System.Int32 id, global::System.String cor, global::System.Int32 ano, global::System.String categoria, global::System.Int32 quilometragem, global::System.Byte estado)
        {
            Veículo veículo = new Veículo();
            veículo.Id = id;
            veículo.Cor = cor;
            veículo.Ano = ano;
            veículo.Categoria = categoria;
            veículo.Quilometragem = quilometragem;
            veículo.Estado = estado;
            return veículo;
        }

        #endregion

        #region Primitive Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=true, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Id
        {
            get
            {
                return _Id;
            }
            set
            {
                if (_Id != value)
                {
                    OnIdChanging(value);
                    ReportPropertyChanging("Id");
                    _Id = StructuralObject.SetValidValue(value);
                    ReportPropertyChanged("Id");
                    OnIdChanged();
                }
            }
        }
        private global::System.Int32 _Id;
        partial void OnIdChanging(global::System.Int32 value);
        partial void OnIdChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Cor
        {
            get
            {
                return _Cor;
            }
            set
            {
                OnCorChanging(value);
                ReportPropertyChanging("Cor");
                _Cor = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Cor");
                OnCorChanged();
            }
        }
        private global::System.String _Cor;
        partial void OnCorChanging(global::System.String value);
        partial void OnCorChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Ano
        {
            get
            {
                return _Ano;
            }
            set
            {
                OnAnoChanging(value);
                ReportPropertyChanging("Ano");
                _Ano = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Ano");
                OnAnoChanged();
            }
        }
        private global::System.Int32 _Ano;
        partial void OnAnoChanging(global::System.Int32 value);
        partial void OnAnoChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.String Categoria
        {
            get
            {
                return _Categoria;
            }
            set
            {
                OnCategoriaChanging(value);
                ReportPropertyChanging("Categoria");
                _Categoria = StructuralObject.SetValidValue(value, false);
                ReportPropertyChanged("Categoria");
                OnCategoriaChanged();
            }
        }
        private global::System.String _Categoria;
        partial void OnCategoriaChanging(global::System.String value);
        partial void OnCategoriaChanged();
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Int32 Quilometragem
        {
            get
            {
                return _Quilometragem;
            }
            set
            {
                OnQuilometragemChanging(value);
                ReportPropertyChanging("Quilometragem");
                _Quilometragem = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Quilometragem");
                OnQuilometragemChanged();
            }
        }
        private global::System.Int32 _Quilometragem;
        partial void OnQuilometragemChanging(global::System.Int32 value);
        partial void OnQuilometragemChanged();
    
        /// <summary>
        /// Estado é um byte porque essa é a melhor maneira de armazená-lo no BD. É necessário um método de conversão para um Enum Estado que criaremos
        /// </summary>
        [EdmScalarPropertyAttribute(EntityKeyProperty=false, IsNullable=false)]
        [DataMemberAttribute()]
        public global::System.Byte Estado
        {
            get
            {
                return _Estado;
            }
            set
            {
                OnEstadoChanging(value);
                ReportPropertyChanging("Estado");
                _Estado = StructuralObject.SetValidValue(value);
                ReportPropertyChanged("Estado");
                OnEstadoChanged();
            }
        }
        private global::System.Byte _Estado;
        partial void OnEstadoChanging(global::System.Byte value);
        partial void OnEstadoChanged();

        #endregion

    
        #region Navigation Properties
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VeículoHistórico", "Histórico")]
        public Histórico Histórico
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.VeículoHistórico", "Histórico").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.VeículoHistórico", "Histórico").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Histórico> HistóricoReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Histórico>("Model1.VeículoHistórico", "Histórico");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Histórico>("Model1.VeículoHistórico", "Histórico", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "ReservaVeículo", "Reserva")]
        public EntityCollection<Reserva> Reserva
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedCollection<Reserva>("Model1.ReservaVeículo", "Reserva");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedCollection<Reserva>("Model1.ReservaVeículo", "Reserva", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "VeículoModelo", "Modelo")]
        public Modelo Modelo
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modelo>("Model1.VeículoModelo", "Modelo").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modelo>("Model1.VeículoModelo", "Modelo").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Modelo> ModeloReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Modelo>("Model1.VeículoModelo", "Modelo");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Modelo>("Model1.VeículoModelo", "Modelo", value);
                }
            }
        }
    
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [XmlIgnoreAttribute()]
        [SoapIgnoreAttribute()]
        [DataMemberAttribute()]
        [EdmRelationshipNavigationPropertyAttribute("Model1", "FuncionárioVeículo", "Funcionário")]
        public Funcionário Funcionário
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioVeículo", "Funcionário").Value;
            }
            set
            {
                ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioVeículo", "Funcionário").Value = value;
            }
        }
        /// <summary>
        /// No Metadata Documentation available.
        /// </summary>
        [BrowsableAttribute(false)]
        [DataMemberAttribute()]
        public EntityReference<Funcionário> FuncionárioReference
        {
            get
            {
                return ((IEntityWithRelationships)this).RelationshipManager.GetRelatedReference<Funcionário>("Model1.FuncionárioVeículo", "Funcionário");
            }
            set
            {
                if ((value != null))
                {
                    ((IEntityWithRelationships)this).RelationshipManager.InitializeRelatedReference<Funcionário>("Model1.FuncionárioVeículo", "Funcionário", value);
                }
            }
        }

        #endregion


        public Veículo()
        {
            // TODO: Complete member initialization
        }
    }

    #endregion

    
}
